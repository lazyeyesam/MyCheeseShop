@inject ProtectedSessionStorage ProtectedSessionStore
@inject ShoppingCart ShoppingCart

<div class="card h-100">
    <img src="/img/no_cheese.png" class="card-img-top p-1" alt="@Cheese.Name">
    <div class="card-body">
        <h5>
            <span class="badge bg-primary">@Cheese.Type</span>&nbsp;
            <span class="badge bg-success">@Cheese.Strength</span>
        </h5>
        <div class="d-flex justify-content-between">
            <h5 class="card-title">@Cheese.Name</h5>
            <h5><span class="badge bg-danger">@Cheese.Price.ToString("C")</span></h5>
        </div>
        <p class="card-text">@Cheese.Description</p>
        <EditForm Model="quantity" OnSubmit="AddToCart">
            <div class="row">
                <div class="col">
                    <InputSelect class="form-select w-100" @bind-Value="quantity" required>
                        @for (var i = 1; i <= 5; i++)
                        {
                            <option value="@i">@(i * 100)g</option>
                        }
                    </InputSelect>
                </div>
                <div class="col">
                    <button class="btn btn-primary position-relative w-100">
                        Add to cart
                        @if (ShoppingCart.GetQuantity(Cheese) > 0)
                        {
                            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                @ShoppingCart.GetQuantity(Cheese)
                                <span class="visually-hidden">@Cheese.Name in shopping cart</span>
                            </span>
                        }
                    </button>
                </div>
            </div>
        </EditForm>
    </div>
</div>

@code {

    [Parameter]
    public Cheese Cheese { get; set; }

    private int quantity = 1;

    public async Task AddToCart()
    {
        ShoppingCart.AddItem(Cheese, quantity);
        await ProtectedSessionStore.SetAsync("cart", ShoppingCart.GetItems());
    }
}
